// Define the data source and generate
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define the Prisma client generation
generator client {
  provider = "prisma-client-js"
}

model TestSpec {
  id            String         @id @default(uuid())
  title         String        
  status        String        
  metadata      Json          
  teamId        String        
  steps         Step[]
  testRuns      TestRun[]
  testSchedules TestSchedule[]
  lastRunAt     DateTime      
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@map("test_specs")
}

model UserFlow {
  id        String   @id @default(uuid())
  title     String  
  status    String  
  metadata  Json    
  teamId    String  
  steps     Step[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user_flows")
}

model TestSchedule {
  id        String   @id @default(uuid())
  teamId    String  
  schedule  Json    
  spec      TestSpec @relation(fields: [specId], references: [id])
  specId    String  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("test_schedules")
}

model Step {
  id         String    @id @default(uuid())
  title      String   
  stepType   String   
  properties Json     
  status     String   
  teamId     String   
  spec       TestSpec? @relation(fields: [specId], references: [id])
  specId     String?  
  userFlow   UserFlow? @relation(fields: [userFlowId], references: [id])
  userFlowId String?
  finishedAt DateTime 
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@map("steps")
}

model TestRun {
  id             String   @id @default(uuid())
  title          String  
  status         String  
  metadata       Json    
  stepContext    Json    
  consoleContext Json    
  networkContext Json    
  spec           TestSpec @relation(fields: [specId], references: [id])
  specId         String
  startedAt      DateTime
  finishedAt     DateTime
  teamId         String  
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("test_runs")
}

model ClientCredential {
  id           String   @id @default(uuid())
  clientId     String  
  clientSecret String  
  permissions  Json    
  teamId       String  
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("client_credentials")
}

model Artifact {
  id            String   @id @default(uuid())
  name          String  
  artifactType String  
  artifactUrl  String  
  metadata      Json    
  teamId        String  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("artifacts")
}

model Integration {
  id               String   @id @default(uuid())
  name             String  
  integrationType String  
  credentials      Json    
  teamId           String  
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@map("integrations")
}
