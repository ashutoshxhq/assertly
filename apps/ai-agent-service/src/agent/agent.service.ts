import { Inject, Injectable } from '@nestjs/common';
import { PlannerAIDTO } from './dto/planner.dto';
import { LanguageModelService } from '../language-model/language-model.service';
import {
    generateStepsSystemPrompt,
    generateStepsUserPrompt,
} from 'src/common/prompts/generate-steps.prompt';
import { Step } from './dto/step.dto';

@Injectable()
export class AgentService {
    constructor(
        @Inject(LanguageModelService) private llm: LanguageModelService,
    ) {}

    async planSteps(data: PlannerAIDTO) {
        console.log(data);
        const systemPrompt = generateStepsSystemPrompt();
        const userPrompt = generateStepsUserPrompt(data);
        const res = await this.llm.generate([
            {
                role: 'system',
                content: systemPrompt,
            },
            {
                role: 'user',
                content: userPrompt,
            },
        ]);
        const steps = JSON.parse(res.message.content);
        if (this.validateSteps(steps)) {
            return {
                status: 'SUCCESS',
                data: {
                    steps: steps,
                },
            };
        } else {
            return {
                status: 'ERROR',
                message: 'Invalid steps generated by language model.',
            };
        }
    }

    validateSteps(generatedSteps: any) {
        const steps: Step[] = generatedSteps;
        return steps;
    }
}
